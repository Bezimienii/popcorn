function transformJavaScript(a,e,i){a.utf8=a.utf8.replace(/^#!/,"//#!"),e.lint&&a["package"].isMainPackage()&&!jshint(a.utf8)&&e.out.warn("jshint "+relativeToWorkingLocation(a.location));var o=a.relativeLocation.replace(/\.js$/,""),t=MontageRequire.parseDependencies(a.utf8);a["package"].isMainPackage()&&(o.toLowerCase()!==o&&e.out.warn("Module file name should be all lower-case "+relativeToWorkingLocation(a.location)),t.forEach(function(i){i.toLowerCase()!==i&&e.out.warn("Module identifier "+JSON.stringify(i)+" should be lower-case in "+relativeToWorkingLocation(a.location))}));var r="montageDefine("+JSON.stringify(a["package"].hash)+","+JSON.stringify(o)+",{dependencies:"+JSON.stringify(t)+",factory:function(require,exports,module){"+a.utf8+"\n}})",n=new File({fs:e.fs,utf8:r,path:a.path?a.path.replace(/\.js$/,".load.js"):"",location:a.location.replace(/\.js$/,".load.js"),relativeLocation:a.relativeLocation.replace(/\.js$/,".load.js"),buildLocation:a.buildLocation.replace(/\.js$/,".load.js"),"package":a["package"]});e.files[n.location]=n,a["package"].files[n.relativeLocation]=n,e.minify?minifyJavaScript.async(a.utf8,function(o,t){o?(e.out.warn("JavaScript parse error in "+a.path+": "+o.message),i&&i()):(a.utf8=t,minifyJavaScript.async(n.utf8,function(a,o){a?e.out.warn("JavaScript parse error in "+n.buildLocation+": "+a.message):n.utf8=o,i&&i()}))}):i&&i()}var MontageRequire=require("mr/require"),File=require("../file"),minifyJavaScript=require("../minify-javascript"),jshint=require("jshint"),relativeToWorkingLocation=require("../util").relativeToWorkingLocation;module.exports=transformJavaScript;