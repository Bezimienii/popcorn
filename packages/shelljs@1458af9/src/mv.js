function _mv(e,o,r){e=common.parseOptions(e,{f:"force"}),arguments.length<3?common.error("missing <source> and/or <dest>"):arguments.length>3?(o=[].slice.call(arguments,1,arguments.length-1),r=arguments[arguments.length-1]):"string"==typeof o?o=[o]:"length"in o?o=o:common.error("invalid arguments"),o=common.expand(o);var n=fs.existsSync(r),s=n&&fs.statSync(r);n&&s.isDirectory()||!(o.length>1)||common.error("dest is not a directory (too many sources)"),n&&s.isFile()&&!e.force&&common.error("dest file already exists: "+r),o.forEach(function(o){if(!fs.existsSync(o))return void common.error("no such file or directory: "+o,!0);var n=r;return fs.existsSync(r)&&fs.statSync(r).isDirectory()&&(n=path.normalize(r+"/"+path.basename(o))),fs.existsSync(n)&&!e.force?void common.error("dest file already exists: "+n,!0):path.resolve(o)===path.dirname(path.resolve(n))?void common.error("cannot move to self: "+o,!0):void fs.renameSync(o,n)})}var fs=require("fs"),path=require("path"),common=require("./common");module.exports=_mv;