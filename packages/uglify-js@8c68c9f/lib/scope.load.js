montageDefine("8c68c9f","lib/scope",{dependencies:[],factory:function(e,n,t){"use strict";function i(e,n,t){this.name=t.name,this.orig=[t],this.scope=e,this.references=[],this.global=!1,this.mangled_name=null,this.undeclared=!1,this.constant=!1,this.index=n,this.id=i.next_id++}i.next_id=1,i.prototype={unmangleable:function(e){return e||(e={}),this.global&&!e.toplevel||this.undeclared||!e.eval&&(this.scope.uses_eval||this.scope.uses_with)||e.keep_fnames&&(this.orig[0]instanceof AST_SymbolLambda||this.orig[0]instanceof AST_SymbolDefun)},mangle:function(e){var n=e.cache&&e.cache.props;if(this.global&&n&&n.has(this.name))this.mangled_name=n.get(this.name);else if(!this.mangled_name&&!this.unmangleable(e)){var t=this.scope;!e.screw_ie8&&this.orig[0]instanceof AST_SymbolLambda&&(t=t.parent_scope),this.mangled_name=t.next_mangled(e,this),this.global&&n&&n.set(this.name,this.mangled_name)}}},AST_Toplevel.DEFMETHOD("figure_out_scope",function(e){e=defaults(e,{screw_ie8:!1,cache:null});var n=this,t=n.parent_scope=null,a=new Dictionary,s=null,o=!1,r=0,c=new TreeWalker(function(n,i){if(e.screw_ie8&&n instanceof AST_Catch){var l=t;return t=new AST_Scope(n),t.init_scope_vars(r),t.parent_scope=l,i(),t=l,!0}if(n instanceof AST_Scope){n.init_scope_vars(r);var l=n.parent_scope=t,f=s,_=a;return s=t=n,a=new Dictionary,++r,i(),--r,t=l,s=f,a=_,!0}if(n instanceof AST_LabeledStatement){var u=n.label;if(a.has(u.name))throw new Error(string_template("Label {name} defined twice",u));return a.set(u.name,u),i(),a.del(u.name),!0}if(n instanceof AST_With)for(var d=t;d;d=d.parent_scope)d.uses_with=!0;else if(n instanceof AST_Symbol&&(n.scope=t),n instanceof AST_Label&&(n.thedef=n,n.references=[]),n instanceof AST_SymbolLambda)s.def_function(n);else if(n instanceof AST_SymbolDefun)(n.scope=s.parent_scope).def_function(n);else if(n instanceof AST_Var)o=n.has_const_pragma();else if(n instanceof AST_SymbolVar||n instanceof AST_SymbolConst){var m=s.def_variable(n);m.constant=n instanceof AST_SymbolConst||o,m.init=c.parent().value}else if(n instanceof AST_SymbolCatch)(e.screw_ie8?t:s).def_variable(n);else if(n instanceof AST_LabelRef){var h=a.get(n.name);if(!h)throw new Error(string_template("Undefined label {name} [{line},{col}]",{name:n.name,line:n.start.line,col:n.start.col}));n.thedef=h}});n.walk(c);var l=null,f=n.globals=new Dictionary,c=new TreeWalker(function(e,t){if(e instanceof AST_Lambda){var a=l;return l=e,t(),l=a,!0}if(e instanceof AST_LoopControl&&e.label)return e.label.thedef.references.push(e),!0;if(e instanceof AST_SymbolRef){var s=e.name;if("eval"==s&&c.parent()instanceof AST_Call)for(var o=e.scope;o&&!o.uses_eval;o=o.parent_scope)o.uses_eval=!0;var r=e.scope.find_variable(s);if(r)e.thedef=r;else{var _;f.has(s)?_=f.get(s):(_=new i(n,f.size(),e),_.undeclared=!0,_.global=!0,f.set(s,_)),e.thedef=_,l&&"arguments"==s&&(l.uses_arguments=!0)}return e.reference(),!0}});n.walk(c),e.cache&&(this.cname=e.cache.cname)}),AST_Scope.DEFMETHOD("init_scope_vars",function(e){this.variables=new Dictionary,this.functions=new Dictionary,this.uses_with=!1,this.uses_eval=!1,this.parent_scope=null,this.enclosed=[],this.cname=-1,this.nesting=e}),AST_Lambda.DEFMETHOD("init_scope_vars",function(){AST_Scope.prototype.init_scope_vars.apply(this,arguments),this.uses_arguments=!1;var e=new AST_VarDef({name:"arguments",start:this.start,end:this.end}),n=new i(this,this.variables.size(),e);this.variables.set(e.name,n)}),AST_SymbolRef.DEFMETHOD("reference",function(){var e=this.definition();e.references.push(this);for(var n=this.scope;n&&(push_uniq(n.enclosed,e),n!==e.scope);)n=n.parent_scope;this.frame=this.scope.nesting-e.scope.nesting}),AST_Scope.DEFMETHOD("find_variable",function(e){return e instanceof AST_Symbol&&(e=e.name),this.variables.get(e)||this.parent_scope&&this.parent_scope.find_variable(e)}),AST_Scope.DEFMETHOD("def_function",function(e){this.functions.set(e.name,this.def_variable(e))}),AST_Scope.DEFMETHOD("def_variable",function(e){var n;return this.variables.has(e.name)?(n=this.variables.get(e.name),n.orig.push(e)):(n=new i(this,this.variables.size(),e),this.variables.set(e.name,n),n.global=!this.parent_scope),e.thedef=n}),AST_Scope.DEFMETHOD("next_mangled",function(e){var n=this.enclosed;e:for(;;){var t=a(++this.cname);if(is_identifier(t)&&!(e.except.indexOf(t)>=0)){for(var i=n.length;--i>=0;){var s=n[i],o=s.mangled_name||s.unmangleable(e)&&s.name;if(t==o)continue e}return t}}}),AST_Function.DEFMETHOD("next_mangled",function(e,n){for(var t=n.orig[0]instanceof AST_SymbolFunarg&&this.name&&this.name.definition();;){var i=AST_Lambda.prototype.next_mangled.call(this,e,n);if(!t||t.mangled_name!=i)return i}}),AST_Scope.DEFMETHOD("references",function(e){return e instanceof AST_Symbol&&(e=e.definition()),this.enclosed.indexOf(e)<0?null:e}),AST_Symbol.DEFMETHOD("unmangleable",function(e){return this.definition().unmangleable(e)}),AST_SymbolAccessor.DEFMETHOD("unmangleable",function(){return!0}),AST_Label.DEFMETHOD("unmangleable",function(){return!1}),AST_Symbol.DEFMETHOD("unreferenced",function(){return 0==this.definition().references.length&&!(this.scope.uses_eval||this.scope.uses_with)}),AST_Symbol.DEFMETHOD("undeclared",function(){return this.definition().undeclared}),AST_LabelRef.DEFMETHOD("undeclared",function(){return!1}),AST_Label.DEFMETHOD("undeclared",function(){return!1}),AST_Symbol.DEFMETHOD("definition",function(){return this.thedef}),AST_Symbol.DEFMETHOD("global",function(){return this.definition().global}),AST_Var.DEFMETHOD("has_const_pragma",function(){var e=this.start&&this.start.comments_before,n=e&&e[e.length-1];return n&&/@const\b/.test(n.value)}),AST_Toplevel.DEFMETHOD("_default_mangler_options",function(e){return defaults(e,{except:[],eval:!1,sort:!1,toplevel:!1,screw_ie8:!1,keep_fnames:!1})}),AST_Toplevel.DEFMETHOD("mangle_names",function(e){e=this._default_mangler_options(e),e.except.push("arguments");var n=-1,t=[];e.cache&&this.globals.each(function(n){e.except.indexOf(n.name)<0&&t.push(n)});var i=new TreeWalker(function(s,o){if(s instanceof AST_LabeledStatement){var r=n;return o(),n=r,!0}if(s instanceof AST_Scope){var c=(i.parent(),[]);return s.variables.each(function(n){e.except.indexOf(n.name)<0&&c.push(n)}),void t.push.apply(t,c)}if(s instanceof AST_Label){var l;do l=a(++n);while(!is_identifier(l));return s.mangled_name=l,!0}if(e.screw_ie8&&s instanceof AST_SymbolCatch)return void t.push(s.definition())});this.walk(i),t.forEach(function(n){n.mangle(e)}),e.cache&&(e.cache.cname=this.cname)}),AST_Toplevel.DEFMETHOD("compute_char_frequency",function(e){e=this._default_mangler_options(e);var n=new TreeWalker(function(n){n instanceof AST_Constant?a.consider(n.print_to_string()):n instanceof AST_Return?a.consider("return"):n instanceof AST_Throw?a.consider("throw"):n instanceof AST_Continue?a.consider("continue"):n instanceof AST_Break?a.consider("break"):n instanceof AST_Debugger?a.consider("debugger"):n instanceof AST_Directive?a.consider(n.value):n instanceof AST_While?a.consider("while"):n instanceof AST_Do?a.consider("do while"):n instanceof AST_If?(a.consider("if"),n.alternative&&a.consider("else")):n instanceof AST_Var?a.consider("var"):n instanceof AST_Const?a.consider("const"):n instanceof AST_Lambda?a.consider("function"):n instanceof AST_For?a.consider("for"):n instanceof AST_ForIn?a.consider("for in"):n instanceof AST_Switch?a.consider("switch"):n instanceof AST_Case?a.consider("case"):n instanceof AST_Default?a.consider("default"):n instanceof AST_With?a.consider("with"):n instanceof AST_ObjectSetter?a.consider("set"+n.key):n instanceof AST_ObjectGetter?a.consider("get"+n.key):n instanceof AST_ObjectKeyVal?a.consider(n.key):n instanceof AST_New?a.consider("new"):n instanceof AST_This?a.consider("this"):n instanceof AST_Try?a.consider("try"):n instanceof AST_Catch?a.consider("catch"):n instanceof AST_Finally?a.consider("finally"):n instanceof AST_Symbol&&n.unmangleable(e)?a.consider(n.name):n instanceof AST_Unary||n instanceof AST_Binary?a.consider(n.operator):n instanceof AST_Dot&&a.consider(n.property)});this.walk(n),a.sort()});var a=function(){function e(){i=Object.create(null),t=a.split("").map(function(e){return e.charCodeAt(0)}),t.forEach(function(e){i[e]=0})}function n(e){var n="",i=54;e++;do e--,n+=String.fromCharCode(t[e%i]),e=Math.floor(e/i),i=64;while(e>0);return n}var t,i,a="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_0123456789";return n.consider=function(e){for(var n=e.length;--n>=0;){var t=e.charCodeAt(n);t in i&&++i[t]}},n.sort=function(){t=mergeSort(t,function(e,n){return is_digit(e)&&!is_digit(n)?1:is_digit(n)&&!is_digit(e)?-1:i[n]-i[e]})},n.reset=e,e(),n.get=function(){return t},n.freq=function(){return i},n}();AST_Toplevel.DEFMETHOD("scope_warnings",function(e){e=defaults(e,{undeclared:!1,unreferenced:!0,assign_to_global:!0,func_arguments:!0,nested_defuns:!0,eval:!0});var n=new TreeWalker(function(t){if(e.undeclared&&t instanceof AST_SymbolRef&&t.undeclared()&&AST_Node.warn("Undeclared symbol: {name} [{file}:{line},{col}]",{name:t.name,file:t.start.file,line:t.start.line,col:t.start.col}),e.assign_to_global){var i=null;t instanceof AST_Assign&&t.left instanceof AST_SymbolRef?i=t.left:t instanceof AST_ForIn&&t.init instanceof AST_SymbolRef&&(i=t.init),i&&(i.undeclared()||i.global()&&i.scope!==i.definition().scope)&&AST_Node.warn("{msg}: {name} [{file}:{line},{col}]",{msg:i.undeclared()?"Accidental global?":"Assignment to global",name:i.name,file:i.start.file,line:i.start.line,col:i.start.col})}e.eval&&t instanceof AST_SymbolRef&&t.undeclared()&&"eval"==t.name&&AST_Node.warn("Eval is used [{file}:{line},{col}]",t.start),e.unreferenced&&(t instanceof AST_SymbolDeclaration||t instanceof AST_Label)&&!(t instanceof AST_SymbolCatch)&&t.unreferenced()&&AST_Node.warn("{type} {name} is declared but not referenced [{file}:{line},{col}]",{type:t instanceof AST_Label?"Label":"Symbol",name:t.name,file:t.start.file,line:t.start.line,col:t.start.col}),e.func_arguments&&t instanceof AST_Lambda&&t.uses_arguments&&AST_Node.warn("arguments used in function {name} [{file}:{line},{col}]",{name:t.name?t.name.name:"anonymous",file:t.start.file,line:t.start.line,col:t.start.col}),e.nested_defuns&&t instanceof AST_Defun&&!(n.parent()instanceof AST_Scope)&&AST_Node.warn('Function {name} declared in nested statement "{type}" [{file}:{line},{col}]',{name:t.name.name,type:n.parent().TYPE,file:t.start.file,line:t.start.line,col:t.start.col})});this.walk(n)})}});