function naturalSorter(e,r){return e>r?1:-1}function cloneAndMergeSelectors(e,r){var n=cloneArray(e);return n[5]=n[5].concat(r[5]),n}function restructure(e,r){function n(e,r,n){for(var l=n.length-1;l>=0;l--){var o=n[l][0],a=t(r,o);if(S[a].length>1&&p(e,S[a])){i(a);break}}}function t(e,r){var n=l(r);return S[n]=S[n]||[],S[n].push([e,r]),n}function i(e){var r,n=e.split(z),t=[];for(var i in S){var l=i.split(z);for(r=l.length-1;r>=0;r--)if(n.indexOf(l[r])>-1){t.push(i);break}}for(r=t.length-1;r>=0;r--)delete S[t[r]]}function l(e){for(var r=[],n=0,t=e.length;n<t;n++)r.push(serializeRules(e[n][1]));return r.join(z)}function o(e){for(var r=[],n=[],t=e.length-1;t>=0;t--)isMergeable(serializeRules(e[t][1]),y,k,x)&&(n.unshift(e[t]),e[t][2].length>0&&r.indexOf(e[t])==-1&&r.push(e[t]));return r.length>1?n:[]}function a(e,r){var t=r[0],i=r[1],l=r[4],a=t.length+i.length+1,u=[],s=[],c=o(O[l]);if(!(c.length<2)){var g=f(c,a,1),v=g[0];if(v[1]>0)return n(e,r,g);for(var p=v[0].length-1;p>=0;p--)u=v[0][p][1].concat(u),s.unshift(v[0][p]);u=tidyRuleDuplicates(u),h(e,[r],u,s)}}function u(e,r){return e[1]>r[1]?1:e[1]==r[1]?0:-1}function f(e,r,n){var t=s(e,r,n,E-1);return t.sort(u)}function s(e,r,n,t){var i=[[e,c(e,r,n)]];if(e.length>2&&t>0)for(var l=e.length-1;l>=0;l--){var o=Array.prototype.slice.call(e,0);o.splice(l,1),i=i.concat(s(o,r,n,t-1))}return i}function c(e,r,n){for(var t=0,i=e.length-1;i>=0;i--)t+=e[i][2].length>n?serializeRules(e[i][1]).length:-1;return t-(e.length-1)*r+1}function h(r,n,t,i){var l,o,a,u,f=[];for(l=i.length-1;l>=0;l--){var s=i[l];for(o=s[2].length-1;o>=0;o--){var c=s[2][o];for(a=0,u=n.length;a<u;a++){var h=n[a],g=c[1][1],v=h[0],p=h[4];if(g==v&&serializeBody([c])==p){s[2].splice(o,1);break}}}}for(l=n.length-1;l>=0;l--)f.unshift(n[l][3]);var d=[Token.RULE,t,f];e.splice(r,0,d)}function g(e,r){var n=r[4],t=O[n];t&&t.length>1&&(v(e,r)||a(e,r))}function v(e,r){var n,t,i=[],l=[],a=r[4],u=o(O[a]);if(!(u.length<2)){e:for(var f in O){var s=O[f];for(n=u.length-1;n>=0;n--)if(s.indexOf(u[n])==-1)continue e;i.push(f)}if(i.length<2)return!1;for(n=i.length-1;n>=0;n--)for(t=T.length-1;t>=0;t--)if(T[t][4]==i[n]){l.unshift([T[t],u]);break}return p(e,l)}}function p(e,r){for(var n,t=0,i=[],l=r.length-1;l>=0;l--){n=r[l][0];var o=n[4];t+=o.length+(l>0?1:0),i.push(n)}var a=r[0][1],u=f(a,t,i.length)[0];if(u[1]>0)return!1;var s=[],c=[];for(l=u[0].length-1;l>=0;l--)s=u[0][l][1].concat(s),c.unshift(u[0][l]);for(s=tidyRuleDuplicates(s),h(e,i,s,c),l=i.length-1;l>=0;l--){n=i[l];var g=T.indexOf(n);delete O[n[4]],g>-1&&q.indexOf(g)==-1&&q.push(g)}return!0}function d(e,r,n){var t=e[0],i=r[0];if(t!=i)return!1;var l=r[4],o=O[l];return o&&o.indexOf(n)>-1}for(var b=r.options,y=b.compatibility.selectors.mergeablePseudoClasses,k=b.compatibility.selectors.mergeablePseudoElements,m=b.compatibility.selectors.mergeLimit,x=b.compatibility.selectors.multiplePseudoMerging,R=r.cache.specificity,O={},T=[],S={},q=[],E=2,z="%",A=e.length-1;A>=0;A--){var M,L,P,D,U,B=e[A];if(B[0]==Token.RULE)M=!0;else{if(B[0]!=Token.NESTED_BLOCK)continue;M=!1}var C=T.length,_=extractProperties(B);q=[];var w=[];for(L=_.length-1;L>=0;L--)for(P=L-1;P>=0;P--)if(!canReorderSingle(_[L],_[P],R)){w.push(L);break}for(L=_.length-1;L>=0;L--){var N=_[L],j=!1;for(P=0;P<C;P++){var K=T[P];q.indexOf(P)==-1&&(!canReorderSingle(N,K,R)&&!d(N,K,B)||O[K[4]]&&O[K[4]].length===m)&&(g(A+1,K,B),q.indexOf(P)==-1&&(q.push(P),delete O[K[4]])),j||(j=N[0]==K[0]&&N[1]==K[1],j&&(U=P))}if(M&&!(w.indexOf(L)>-1)){var F=N[4];j&&T[U][5].length+N[5].length>m?(g(A+1,T[U]),T.splice(U,1),O[F]=[B],j=!1):(O[F]=O[F]||[],O[F].push(B)),j?T[U]=cloneAndMergeSelectors(T[U],N):T.push(N)}}for(q=q.sort(naturalSorter),L=0,D=q.length;L<D;L++){var G=q[L]-L;T.splice(G,1)}}for(var H=e[0]&&e[0][0]==Token.AT_RULE&&0===e[0][1].indexOf("@charset")?1:0;H<e.length-1;H++){var I=e[H][0]===Token.AT_RULE&&0===e[H][1].indexOf("@import"),J=e[H][0]===Token.COMMENT;if(!I&&!J)break}for(A=0;A<T.length;A++)g(H,T[A])}var canReorderSingle=require("./reorderable").canReorderSingle,extractProperties=require("./extract-properties"),isMergeable=require("./is-mergeable"),tidyRuleDuplicates=require("./tidy-rule-duplicates"),Token=require("../../tokenizer/token"),cloneArray=require("../../utils/clone-array"),serializeBody=require("../../writer/one-time").body,serializeRules=require("../../writer/one-time").rules;module.exports=restructure;