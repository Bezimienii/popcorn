function log(e,n){"debug"===DEBUG?console.log(WORKER,e,n):"info"===DEBUG&&console.log(WORKER,e)}function debug(e,n){"debug"===DEBUG&&console.log(WORKER,e,n)}function postMessage(e){return"debug"===DEBUG&&debug("postMessage",e),self.clients.matchAll().then(function(n){return Promise.all(n.map(function(n){return n.postMessage(e)}))})}function parseAppCache(e){var n={rev:"",cache:[],network:[]},t=null;return e.split("\n").forEach(function(e){if(e)if(cacheSections.indexOf(e)!==-1)t=e;else if("CACHE MANIFEST"===t)if(0===e.indexOf("#")){var r=String(e||"").split(" ");r[0]&&r[1]&&e.indexOf(r[0])!==-1&&(n.rev+=n[r[0].replace("#")]=r[1])}else n.cache.push(e);else"CACHE:"===t?n.cache.push(e):"NETWORK:"===t&&n.network.push(e)}),n}function getAppCache(){return new Promise(function(e,n){log("Fetch cache manifest..."),postMessage("Updating"),fetch("./manifest.appcache").then(function(t){return 200===t.status?t.text().then(function(n){var t=parseAppCache(n);log("AppCache.rev: "+t.rev),e(t)},n):void n("NoAppCache")},function(e){log("Fetch cache manifest failed cause: "+e),n(e)})})}function getStorage(){return new Promise(function(e,n){var t=indexedDB.open(dbName,1);t.onupgradeneeded=function(){var e=t.result,n=e.createObjectStore(storeName,{keyPath:"key"});n.createIndex("KeyIndex",["key"])},t.onblocked=function(e){e.target.result&&e.target.result.close(),n(e.target.error||"OpenBlocked")},t.onerror=function(e){n(e.target.error||"OpenError")},t.onsuccess=function(){e(t.result)}})}function getStorageValue(e){return getStorage().then(function(n){var t=n.transaction(storeName,"readwrite"),r=t.objectStore(storeName);return new Promise(function(n,t){var o=r.get(e);o.onsuccess=function(e){var t=e.target.result;n("undefined"!=typeof t&&"string"==typeof t.value?t.value:null)},o.onerror=function(e){n(e.target.error)}})["finally"](function(){n.close()})})}function setStorageValue(e,n){return getStorage().then(function(t){var r=t.transaction(storeName,"readwrite"),o=r.objectStore(storeName);return new Promise(function(t,r){var c=o.put({key:e,value:n});c.onerror=function(e){t(e.target.error)},c.onsuccess=function(e){t(e.target.result)}})["finally"](function(){t.close()})})}function setAppVersion(e){return setStorageValue(CACHE_KEY,e)}function getAppVersion(){return getStorageValue(CACHE_KEY).then(function(e){return debug("App.rev: "+e),e}).then(function(e){return caches.has(e).then(function(n){return n?e:null})})}function clearCache(e){return setAppVersion(null).then(function(){return caches.keys().then(function(e){return Promise.all(e.map(function(e){return caches["delete"](e)}))})})}function pushCache(e,n){return n=n.filter(function(e){return 0!==e.indexOf("packages/")}),log("Adding "+n.length+" to cache"+e+"..."),caches.open(e).then(function(t){return t.addAll(n).then(function(){return log("Added "+n.length+" to cache"+e,n),e})})}function statusCache(){return getAppVersion().then(function(e){return caches.open(e).then(function(n){return n.keys().then(function(n){log(e,n)})})})}function updateCache(){return pendingCacheUpdate?pendingCacheUpdate:(pendingCacheUpdate=getAppCache()).then(function(e){return getAppVersion().then(function(n){return new Promise(function(t,r){return null===n?(log('Installing "'+e.rev+'"'),pushCache(e.rev,e.cache).then(function(){return log('Installed "'+e.rev+'"'),setAppVersion(e.rev)})):n===e.rev?(log('Cached "'+e.rev+'"'),r("Cached")):(log('Updating to "'+e.rev+'"'),void clearCache(n).then(function(){return pushCache(e.rev,e.cache).then(function(){return log('Updated from "'+n+'" to "'+e.rev+'"'),setAppVersion(e.rev)})}).then(t,r))})})})["finally"](function(){pendingCacheUpdate=null})}var CACHE_KEY="cacheVersion",WORKER="sw.js",DEBUG="debug";Promise.prototype["finally"]=function(e){var n=this.constructor;return this.then(function(t){return n.resolve(e()).then(function(){return t})},function(t){return n.resolve(e()).then(function(){throw t})})};var cacheSections=["CACHE MANIFEST","CACHE:","NETWORK:"],cacheVersionSections=["#version","#hash"],dbName="OfflineWorker",storeName="OfflineObjectStore",pendingCacheUpdate;debug("Started",self),postMessage("Started"),self.addEventListener("install",function(e){log("Install...",e),e.waitUntil(updateCache().then(function(){return self.skipWaiting()}).then(function(e){return postMessage("Installed")},function(){return postMessage("InstallFailed")}))}),self.addEventListener("activate",function(e){log("Activating...",e),e.waitUntil(updateCache().then(function(e){return postMessage("Updated")})["catch"](function(e){return log("No Update cause: "+e),postMessage("NoUpdate")}).then(function(){return clients.claim()}))}),self.addEventListener("message",function(e){log("Checking...",e),e.waitUntil(updateCache().then(function(e){return postMessage("Updated")})["catch"](function(e){return log("No Update cause: "+e),postMessage("NoUpdate")}))}),self.addEventListener("sync",function(e){debug("Push event received",e)}),self.addEventListener("push",function(e){debug("Push event received",e)}),self.addEventListener("update",function(e){debug("Update event received",e)}),self.addEventListener("fetch",function(e){e.request.url.startsWith(self.location.origin)&&e.respondWith(caches.match(e.request).then(function(n){return n?(debug("Cache hit",e.request.url),n):(debug("Cache miss",e.request.url),fetch(e.request))}))});